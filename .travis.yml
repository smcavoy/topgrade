# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: trusty
language: rust
services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    # TODO Update this to match the name of your project.
    - CRATE_NAME=topgrade

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    - env: TARGET=aarch64-unknown-linux-gnu
    - env: TARGET=armv7-unknown-linux-gnueabihf
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    - env: TARGET=x86_64-apple-darwin
      os: osx

before_install:
  - set -e
  - rustup self update
  - rustup component add rustfmt-preview clippy-preview

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: jq6e1lBS/Fck4ThIQLog/8+y8+pPqc7Fqas6f2JXzGtcykkXd+4NzCVYgGAJo0koex5AvKTdnE0C3axHvjpqYRuQXZ8TmiCURSJA5l+x9Dmps+NqMFML1L5m4ue/LOLHwxCckf5aZV3QwR3Ora8hn+xYTP6s2oEdaOfQCg5HnpWXqrTTEKLRWuZNoEQHjOiXLaPJlcg2mmgnmfTM2AfWMfLHRRx8mA7YkB09JeaqXTDqtVY6UT5f22HYT0jvIXFU37agQQLS4q/YETNISoCbKpXJaDekXU9AbP7neZ39TceThG7u0Lf2YXq4bmAvwMCGDFp6evwp8KaCeDcLlobP25A/oIYr3SiTjscQO4OiTVCIIQBWV1gQX4HgA3WKhAz/NimF2Mzv79i5WLC0tcPIP3z9d/h8sDuDswJumy6CPAVJNTApljRcI6cPttBAKugMAcYveK8TIhSAjtzOeGrFFou1tAxVRsr8IQPJCspHj3OWqkLj0mBUx9qL8W8PIpEl7c8cI0HDyceTtfjzWZpk9jdEAd8ZRBbjciFwbzo5hWC8xtoHQks5VeyNmZnq5Wg2uB1rhkpeAJvZhbA7CXXoGq/fLSivYppiePkeuwf8CDinDK29OKFMQFCJ+5RSGagbss8zEI+xkENL/kh6eeCO5Oo3mKNY8oQxbVFEGydFlgs=
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

notifications:
  email:
    on_success: never
